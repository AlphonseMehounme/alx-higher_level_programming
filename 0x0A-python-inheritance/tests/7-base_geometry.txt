---------------------
---------------------
7-Base Geometry Tests
---------------------
---------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("Name")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("Name", "Satoshi")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise TypeError(error_msg)
TypeError: Name must be an integer
>>> bg.integer_validator("Name", 21)
>>> bg.integer_validator("Name", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 20, in integer_validator
    raise ValueError(error_msg)
ValueError: Name must be greater than 0
>>> bg.integer_validator("Name", -21)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 20, in integer_validator
    raise ValueError(error_msg)
ValueError: Name must be greater than 0
>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 12, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> bg.integer_validator("Name", [1, 2])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise TypeError(error_msg)
TypeError: Name must be an integer
>>> bg.integer_validator("Name", {1})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise TypeError(error_msg)
TypeError: Name must be an integer
>>> bg.integer_validator("Name", (1,))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise TypeError(error_msg)
TypeError: Name must be an integer
>>> bg.integer_validator("Name", {"New": 1})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise TypeError(error_msg)
TypeError: Name must be an integer
